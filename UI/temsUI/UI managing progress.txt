=====================< Documentation >============
Angular + asp.net pagination =>  Upvoted anwer on github



=====================< Done but need REFACTORING! >=====================
-Theme - done
-Sidebar - done
-link siderbarnavitems to components (routing) - done
-show / hide sidebar options depending on user's role (the fake one which comes from user-service).
-restrict user access to components he does not have provilleges to.
	-- sources: https://metanit.com/web/angular2/7.7.php



=====================< Currently Working On >======================

Making details components more GENERIC!
-- entityLogsListComponent => has three input parameters (room, equipment, personnel).
Depending on the parameter that has been indicated (only one at a time, of course) it will
extract all of the logs associated with that specific entity and will display them in a 
list. 

--- Create a module that contains all of shared components of room, eq and pers


=====================< Up Next >=======================

Start building core components
1) Add Equipment and all it's sub-components. DeadLine: 07>02>2021, 23:59
	Make it more dynamic
	Styling
	Optimization

2) View Items
	Select multiple - allocate to a room, person
	Add actions => View (redirects to details page), delete => archieves it and more..
 
3) View item details along with it's children, parents, logs, issues and allocations, including creating new allocations.
	From here will be available the following actions:
		Update equipment information
		allocate
		Some quick actions like -> Mark as defect, mark as unused and so on.
		View and create issues
		---- view and create logs


q) Use objects with the autocomplete control in QuickAccessComponent and redirect 
to details/actualId instead of details/name or details/roomid and so on...

q) Make EquipmentDetails=>Logs, Issues and Allocations GENERIC! In order
to use the same component for rooms, equipment, personnel.

q) When creating a definition user can choose already defined definitions for children

q) When adding a new equipment, user can choose another definition for a specific child type (for example
for a PC he can chose another Power Supply, different from the one in definition)

q) Add support for level 2+ children

q) Add some sort of filtering to ViewIssuesComponent



=====================< ??? >========================

Find a way to indicate which property of a type will serve as identifier.



======================= CLOSED ISSUES ======================================
Managing fiels with the same key but different input (add-equipment.component - formly) ??? :/



========================= ISSUES ============================

Personnel quick access searches the record by name, (Problem - multiple records with the same id? :/)





========================= API DB Changes ===========================


Related to Issues!
- Add label for Issues (Urgent, Medium, Future, Fixed);
- Technicians / people with the necessary rights and choose what issue to solve
- If an administrator is creating the issue, he can assign it to be solved to whoever he wants (among registered
users).


Related to rooms!
- Add room label entity => types of rooms (Laboratory, simple class Room, deposit etc.)

Related to keys
- Add roomId fied to keys table

Related to propertyes
Add description








